# Compiler and flags
CC = cc
# CFLAGS = -Wall -Wextra -Werror
INCLUDES = -I includes
CFLAGS = -I/goinfre/mel-mora/homebrew/opt/readline/include
LDFLAGS = -lreadline
LIBFTT = -L $(SRCS_DIR)/libft/ -lft


# Directories
SRCS_DIR = srcs
OBJS_DIR = objs
LIBFT = $(SRCS_DIR)/libft/libft.a
# Source files
SRCS = $(SRCS_DIR)/main.c \
       $(SRCS_DIR)/cleaning/clean_1.c \
       $(SRCS_DIR)/cleaning/clean_2.c \
       $(SRCS_DIR)/debug/print.c \
       $(SRCS_DIR)/env/expander.c \
       $(SRCS_DIR)/env/parse_env.c \
       $(SRCS_DIR)/env/toberemoved.c \
       $(SRCS_DIR)/parsing/command_utils.c \
       $(SRCS_DIR)/parsing/command.c \
       $(SRCS_DIR)/parsing/helpers.c \
       $(SRCS_DIR)/parsing/logical.c \
       $(SRCS_DIR)/parsing/pipe.c \
       $(SRCS_DIR)/parsing/subshell_utils.c \
       $(SRCS_DIR)/parsing/subshell.c \
       $(SRCS_DIR)/parsing/utils.c \
       $(SRCS_DIR)/tokenizer/helpers.c \
       $(SRCS_DIR)/tokenizer/quotes.c \
       $(SRCS_DIR)/tokenizer/special_tokens.c \
       $(SRCS_DIR)/tokenizer/tokenize.c \
       $(SRCS_DIR)/tokenizer/utils.c \
       $(SRCS_DIR)/tokenizer/words.c \
       $(SRCS_DIR)/utils/utils_1.c \
       $(SRCS_DIR)/execution/subshell/subshell.c \
       $(SRCS_DIR)/execution/utils/executing_utils.c \
       $(SRCS_DIR)/execution/redirections/output.c \
       $(SRCS_DIR)/execution/redirections/input.c \
       $(SRCS_DIR)/execution/redirections/heredoc.c \
       $(SRCS_DIR)/execution/exec_command/command.c \
       $(SRCS_DIR)/execution/exec_command/child_execution.c \
       $(SRCS_DIR)/execution/exec_command/context_management.c \
       $(SRCS_DIR)/execution/utils/error_utils.c \
       $(SRCS_DIR)/execution/utils/heredoc.c \
       $(SRCS_DIR)/execution/utils/misc_utils.c \
       $(SRCS_DIR)/execution/utils/quotes_utils.c \
       $(SRCS_DIR)/execution/utils/string_helpers.c \
       $(SRCS_DIR)/execution/builtins/core/cd.c \
       $(SRCS_DIR)/execution/builtins/core/echo.c \
       $(SRCS_DIR)/execution/builtins/core/env.c \
       $(SRCS_DIR)/execution/builtins/core/exit.c \
       $(SRCS_DIR)/execution/builtins/core/export.c \
       $(SRCS_DIR)/execution/builtins/core/pwd.c \
       $(SRCS_DIR)/execution/builtins/core/unset.c \
       $(SRCS_DIR)/execution/builtins/builtin_manager.c \
       $(SRCS_DIR)/execution/builtins/builtin_utils.c \
       $(SRCS_DIR)/execution/builtins/builtin_utils2.c \
       $(SRCS_DIR)/execution/wildcards/wildcard.c \
       $(SRCS_DIR)/execution/wildcards/wildcard_utils.c \
       $(SRCS_DIR)/execution/pipes/pipe.c \
       $(SRCS_DIR)/execution/ast/execute_ast.c \
       $(SRCS_DIR)/execution/ast/execute_ast_utils.c
       # $(SRCS_DIR)/execution/exec_command/execute_command.c \


# Object files
OBJS = $(SRCS:$(SRCS_DIR)/%.c=$(OBJS_DIR)/%.o)

# Executable name
NAME = minishell

# Default target
all: $(NAME)

# Rule to compile the executable
$(NAME): $(OBJS)
	$(CC) $(CFLAGS) $(INCLUDES) $(OBJS) $(LIBFTT) -o $(NAME) $(LDFLAGS)

# Rule to compile object files
$(OBJS_DIR)/%.o: $(SRCS_DIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Clean rule
clean:
	rm -rf $(OBJS_DIR)

# Full clean rule (clean + remove executable)
fclean: clean
	rm -f $(NAME)

# Rebuild rule
re: fclean all

# Phony targets
.PHONY: all clean fclean re